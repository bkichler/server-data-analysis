group_by(VMName) %>%
summarize(ObservationCount = n(),
MedianAvgVMCpu = median(AvgCpuUsage),
MedianAvgVmMem = median(AvgMemUsage),
MedianCpuUsageRange = median(CpuUsageRange),
MedianMemUsageRange = median(MemUsageRange),
CpuMHz = max(CpuMHz),
NumCpu = max(NumCpu),
Cluster = max(Cluster)) %>%
filter(ObservationCount > (ObservationCount - sd(ObservationCount)))
too_few_observations <- filter(summary_df, ObservationCount < ObservationCount - sd(ObservationCount))
View(too_few_observations)
sd(summary_df$ObservationCount)
ObservationCount - sd(summary_df$ObservationCount)
summary_df$ObservationCount - sd(summary_df$ObservationCount)
too_few_observations <- filter(summary_df, ObservationCount > ObservationCount - sd(ObservationCount))
View(too_few_observations)
summary_df %>%
filter(MedianAvgVMCpu < (MedianAvgVMCpu - descriptive_stat_summary$Q0.25[1]))
descriptive_stat_summary$Q0.25[1]
descriptive_stat_summary$Q0.25
View(descriptive_stat_summary)
descriptive_stat_summary <- describe(summary_df[,2:5], ranges = FALSE, quant = c(.25,.75), IQR = TRUE)
View(descriptive_stat_summary)
View(too_few_observations)
View(descriptive_stat_summary)
summary_df %>%
filter(MedianAvgVMCpu < (MedianAvgVMCpu - descriptive_stat_summary$Q0.25[1]))
descriptive_stat_summary$Q0.25[1]
MedianAvgVMCpu - descriptive_stat_summary$Q0.25[1]
summary_df$MedianAvgVMCpu - descriptive_stat_summary$Q0.25[1]
summary_df %>%
filter(MedianAvgVMCpu < (MedianAvgVMCpu - descriptive_stat_summary$Q0.25[2]))
descriptive_stat_summary$Q0.25[2]
summary_df %>%
filter(MedianAvgVMCpu < descriptive_stat_summary$Q0.25)
# Plot CPU Usage by Cluster
summary_df %>%
filter(!is.na(Cluster)) %>%
ggplot(aes(x=Cluster, y=MedianAvgVMCpu, color = Cluster)) +
geom_boxplot(outlier.color = "red") +
stat_summary(fun.y=mean, geom="point", shape=23, size = 3) +
geom_hline(yintercept = 374449402.2, linetype = "dashed", color = "red") +
geom_hline(yintercept = 208114707.8, color = "red") +
geom_hline(yintercept = 508023370.4, color = "red") +
ggtitle("Plot of CPU Usage by Cluster", subtitle =  "Grouped by VM Average Median") +
xlab("Cluster") +
ylab("CPU Usage (x1000000)")
summary_df$Cluster <- as.factor(summary_df$Cluster)
summary_df %>%
filter(!is.na(Cluster)) %>%
ggplot(aes(x=Cluster, y=MedianAvgVMCpu, color = Cluster)) +
geom_boxplot(outlier.color = "red") +
stat_summary(fun.y=mean, geom="point", shape=23, size = 3) +
geom_hline(yintercept = 374449402.2, linetype = "dashed", color = "red") +
geom_hline(yintercept = 208114707.8, color = "red") +
geom_hline(yintercept = 508023370.4, color = "red") +
ggtitle("Plot of CPU Usage by Cluster", subtitle =  "Grouped by VM Average Median") +
xlab("Cluster") +
ylab("CPU Usage (x1000000)")
summary_df %>%
filter(!is.na(Cluster)) %>%
ggplot(aes(x=Cluster, y=MedianAvgVMCpu, color = Cluster)) +
geom_boxplot(outlier.color = "red") +
stat_summary(fun.y=mean, geom="point", shape=23, size = 3) +
geom_hline(yintercept = 374449402.2, linetype = "dashed", color = "blue") +
geom_hline(yintercept = 208114707.8, color = "blue") +
geom_hline(yintercept = 508023370.4, color = "blue") +
ggtitle("Plot of CPU Usage by Cluster", subtitle =  "Grouped by VM Average Median") +
xlab("Cluster") +
ylab("CPU Usage (x1000000)")
summary_df %>%
filter(MedianAvgVMCpu < descriptive_stat_summary$Q0.25 & NumCpu > 1)
descriptive_stat_summary <- describe(summary_df[,2:6], ranges = FALSE, quant = c(.25,.75), IQR = TRUE)
too_few_observations <- filter(summary_df, ObservationCount > (ObservationCount - sd(ObservationCount)))
View(too_few_observations)
sd_observation_count <- sd(summary_df$ObservationCount)
too_few_observations <- filter(summary_df, ObservationCount > (ObservationCount - sd_observation_count))
too_few_observations <- filter(summary_df, ObservationCount > (ObservationCount - 10))
too_few_observations <- filter(summary_df, ObservationCount < (ObservationCount - sd(ObservationCount)))
too_few_observations <- filter(summary_df, ObservationCount < 40)
too_few_observations <- filter(summary_df, ObservationCount < ObservationCount - sd(ObservationCount))
too_few_observations <- filter(summary_df, ObservationCount < ObservationCount - sd_observation_count)
too_few_observations <- dplyr::filter(summary_df, ObservationCount < ObservationCount - sd_observation_count)
too_few_observations <- dplyr::filter(summary_df, ObservationCount < ObservationCount - 10.38)
too_few_observations <- dplyr::filter(summary_df, ObservationCount < ObservationCount - get(sd_observation_count))
too_few_observations <- dplyr::filter(summary_df, ObservationCount < ObservationCount - get("sd_observation_count"))
too_few_observations <- dplyr::filter(summary_df, ObservationCount < (ObservationCount - get("sd_observation_count")))
dplyr::filter(summary_df, ObservationCount < (ObservationCount - get("sd_observation_count")))
get("sd_observation_count")
summary_df$ObservationCount[1] - get("sd_observation_count")
too_few_observations <- dplyr::filter(summary_df, ObservationCount < (summary_df$ObservationCount - get("sd_observation_count")))
too_few_observations <- dplyr::filter(summary_df, ObservationCount < ObservationCount - 10.38)
too_few_observations <- filter(summary_df, ObservationCount < ObservationCount - 10.38)
too_few_observations <- filter(summary_df, ObservationCount > ObservationCount - 10.38)
too_few_observations <- filter(summary_df, ObservationCount < (ObservationCount - 10.38))
too_few_observations <- dplyr::filter(summary_df, ObservationCount < (ObservationCount - 10.38))
View(summary_df)
filter(summary_df, ObservationCount < ObservationCount - 10.38)
filter(summary_df, ObservationCount < 40)
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(color = "white", alpha = 0.7, fill = "red")
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(binwidth = 15, color = "white", alpha = 0.7, fill = "red")
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(binwidth = 50, color = "white", alpha = 0.7, fill = "red")
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(binwidth = 10, color = "white", alpha = 0.7, fill = "red")
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, fill = "red")
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, fill = "red") +
geom_vline(xintercept = mean(ObservationCount))
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, fill = "red") +
geom_vline(xintercept = 51.7)
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, fill = "red") +
geom_vline(xintercept = 51.7, color = "blue", linetype = "longdash")
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, fill = "red") +
geom_vline(xintercept = 51.7, color = "blue", linetype = "longdash") +
ggtitle("Distribution of Record Count by VM") +
xlab("Record Count") +
ylab("VM Count")
summary_df %>%
filter(MedianAvgVMCpu < descriptive_stat_summary$Q0.25 & NumCpu > 1)
underutilized_VMs <- summary_df %>%
filter(MedianAvgVMCpu < descriptive_stat_summary$Q0.25 & NumCpu > 1)
descriptive_stat_summary$mean[1]
few_observation_VMs <- summary_df %>%
filter(ObservationCount < descriptive_stat_summary$Q0.25[1])
View(few_observation_VMs)
cor(summary_df$ObservationCount, summary_df$NumCpu)
>cor
?cor
cor(summary_df$ObservationCount, summary_df$NumCpu, na.rm = TRUE)
cor(summary_df$ObservationCount, summary_df$NumCpu)
rm(memory_vals)
rm(raw_data)
rm(cpu_vals)
rm(too_few_observations)
count_numcpu <- data.frame(rbind(summary_df$ObservationCount, summary_df$NumCpu))
View(count_numcpu)
count_numcpu <- data.frame(cbind(summary_df$ObservationCount, summary_df$NumCpu))
names(count_numcpu) <- c("ObservationCount", "NumCpu")
cor(count_numcpu$ObservationCount, count_numcpu$NumCpu)
cor(count_cpu)
cor(count_numcpu)
cor(count_numcpu, use = "complete.obs")
cor(summary_df[,2:8])
cor(summary_df[,2:6])
install.packages("ggcorrplot")
library(ggcorrplot)
corr <- cor(summary_df[,2:6])
ggcorrplot(corr)
ggcorrplot(corr, hc.order = TRUE, outline.color = "white")
ggcorrplot(corr, hc.order = TRUE, outline.color = "white", lab = TRUE)
summary_stats <- summary(wide_df)
summary_stats <- as.data.frame(summary(wide_df))
View(summary_stats)
rm(summary_stats)
install.packages("qwraps2")
library(qwraps2)
summary_stats <- summary_table(wide_df)
summary_stats <- summary(wide_df)
summary_table <- summary_table(summary_stats)
summary_stats <-
list("Average Memory Usage" =
list("min" = ~ min(.data$AvgMemUsage),
"max" = ~ max(.data$AvgMemUsage),
"mean (sd)" = ~ qwraps2::mean_sd(.data$AvgMemUsage)),
"Average CPU Usage" =
list("min" = ~ min(.data$AvgCpuUsage),
"median" = ~ median(.data$AvgCpuUsage),
"max" = ~ max(.data$AvgCpuUsage),
"mean (sd)" = ~ qwraps2::mean_sd(.data$AvgCpuUsage)),
"Memory Usage Range" =
list("min" = ~ min(.data$MemUsageRange),
"max" = ~ max(.data$MemUsageRange),
"mean (sd)" = ~ qwraps2::mean_sd(.data$MemUsageRange)),
"Clusters" =
list("1" = ~ qwraps2::n_perc0(.data$Cluster == 1),
"2"  = ~ qwraps2::n_perc0(.data$Cluster == 2),
"3"  = ~ qwraps2::n_perc0(.data$Cluster == 3),
"4"  = ~ qwraps2::n_perc0(.data$Cluster == 4)
"5"  = ~ qwraps2::n_perc0(.data$Cluster == 5))
)
summary_stats <-
list("Average Memory Usage" =
list("min" = ~ min(.data$AvgMemUsage),
"max" = ~ max(.data$AvgMemUsage),
"mean (sd)" = ~ qwraps2::mean_sd(.data$AvgMemUsage)),
"Average CPU Usage" =
list("min" = ~ min(.data$AvgCpuUsage),
"median" = ~ median(.data$AvgCpuUsage),
"max" = ~ max(.data$AvgCpuUsage),
"mean (sd)" = ~ qwraps2::mean_sd(.data$AvgCpuUsage)),
"Memory Usage Range" =
list("min" = ~ min(.data$MemUsageRange),
"max" = ~ max(.data$MemUsageRange),
"mean (sd)" = ~ qwraps2::mean_sd(.data$MemUsageRange)),
"Clusters" =
list("1" = ~ qwraps2::n_perc0(.data$Cluster == 1),
"2"  = ~ qwraps2::n_perc0(.data$Cluster == 2),
"3"  = ~ qwraps2::n_perc0(.data$Cluster == 3),
"4"  = ~ qwraps2::n_perc0(.data$Cluster == 4),
"5"  = ~ qwraps2::n_perc0(.data$Cluster == 5))
)
stats <- summary_table(wide_df, summary_stats)
whole
stats
options(qwraps2_markup = "markdown")
summary_table(wide_df, summary_stats)
options(qwraps2_markup = "html")
summary_table(wide_df, summary_stats)
?qwraps2_markup
??qwraps2_markup
options(qwraps2_markup = "latex")
summary_table(wide_df, summary_stats)
install.packages("knitr")
save.image("D:/Google Drive/Itility - Data Assignment/Itility - Global ENV.RData")
install.packages("knitr")
install.packages("knitr")
install.packages("rmarkdown")
library(knitr)
library(rmarkdown)
options(qwraps2_markup = "markdown")
summary_table(wide_df, summary_stats)
options(qwraps2_markup = "markdown")
summary_table(wide_df, summary_stats)
library(qwraps2)
summary_table(wide_df, summary_stats)
summary_table(wide_df, summary_stats)
summary_stats <-
list("Average Memory Usage" =
list("min" = ~ min(.data$AvgMemUsage),
"max" = ~ max(.data$AvgMemUsage),
"mean (sd)" = ~ qwraps2::mean_sd(.data$AvgMemUsage)),
"Average CPU Usage" =
list("min" = ~ min(.data$AvgCpuUsage),
"median" = ~ median(.data$AvgCpuUsage),
"max" = ~ max(.data$AvgCpuUsage),
"mean (sd)" = ~ qwraps2::mean_sd(.data$AvgCpuUsage)),
"Memory Usage Range" =
list("min" = ~ min(.data$MemUsageRange),
"max" = ~ max(.data$MemUsageRange),
"mean (sd)" = ~ qwraps2::mean_sd(.data$MemUsageRange)),
"VM Count & Percent of Total by Cluster" =
list("1" = ~ qwraps2::n_perc0(.data$Cluster == 1),
"2"  = ~ qwraps2::n_perc0(.data$Cluster == 2),
"3"  = ~ qwraps2::n_perc0(.data$Cluster == 3),
"4"  = ~ qwraps2::n_perc0(.data$Cluster == 4),
"5"  = ~ qwraps2::n_perc0(.data$Cluster == 5))
)
summary_table(wide_df, summary_stats)
View(wide_df)
raw_data <- read_delim(list.files()[4], ";")
library(tidyverse)
raw_data <- read_delim(list.files()[4], ";")
list.files()
raw_data <- read_delim(list.files()[7], ";")
View(raw_data)
knitr::opts_chunk$set(echo = FALSE)
summary(raw_data)
knitr::opts_chunk$set(echo = TRUE)
summary(raw_data)
raw_data$time <- as.Date(raw_data$time, "%m-%d-%Y")
View(raw_data)
knitr::opts_chunk$set(echo = TRUE)
summary(raw_data)
save.image("D:/Google Drive/Itility - Data Assignment/Itility - Global ENV.RData")
View(wide_df)
summary_stats <-
list("Average Memory Usage" =
list("min" = ~ min(.data$AvgMemUsage),
"max" = ~ max(.data$AvgMemUsage),
"mean (sd)" = ~ qwraps2::mean_sd(.data$AvgMemUsage)),
"Average CPU Usage" =
list("min" = ~ min(.data$AvgCpuUsage),
"median" = ~ median(.data$AvgCpuUsage),
"max" = ~ max(.data$AvgCpuUsage),
"mean (sd)" = ~ qwraps2::mean_sd(.data$AvgCpuUsage)),
"Memory Usage Range" =
list("min" = ~ min(.data$MemUsageRange),
"max" = ~ max(.data$MemUsageRange),
"mean (sd)" = ~ qwraps2::mean_sd(.data$MemUsageRange)),
"CPU Usage Range" =
list("min" = ~ min(.data$CpuUsageRange),
"max" = ~ max(.data$CpuUsageRange),
"mean (sd)" = ~ qwraps2::mean_sd(.data$CpuUsageRange)),
"Observation Count & Percent of Total by Cluster" =
list("1" = ~ qwraps2::n_perc0(.data$Cluster == 1),
"2"  = ~ qwraps2::n_perc0(.data$Cluster == 2),
"3"  = ~ qwraps2::n_perc0(.data$Cluster == 3),
"4"  = ~ qwraps2::n_perc0(.data$Cluster == 4),
"5"  = ~ qwraps2::n_perc0(.data$Cluster == 5))
)
summary_table(wide_df, summary_stats)
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, fill = "red") +
geom_vline(xintercept = 51.7, color = "blue", linetype = "longdash") +
ggtitle("Distribution of Record Count by VM") +
xlab("Record Count") +
ylab("VM Count")
wide_df %>%
ggplot(aes(x = AvgMemUsage)) +
geom_histogram(color = "white", alpha = 0.7, fill = "blue") +
ggtitle("Average Memory Usage Distribution by Server") +
xlab("Average memory usage (x1000000)") +
ylab("Observation Count")
wide_df %>%
ggplot(aes(x = AvgMemUsage)) +
geom_histogram(color = "white", alpha = 0.7, fill = "blue") +
ggtitle("Average Memory Usage Distribution by Observation Count") +
xlab("Average memory usage (x1000000)") +
ylab("Observation Count")
wide_df %>%
ggplot(aes(x = AvgMemUsage)) +
geom_histogram(color = "white", alpha = 0.7, fill = "blue") +
ggtitle("Average Memory Usage Distribution by Observation Count") +
geom_hline(xintercept = 338.67, linetype = "dashed", color = "red") +
xlab("Average memory usage (x1000000)") +
ylab("Observation Count")
wide_df %>%
ggplot(aes(x = AvgMemUsage)) +
geom_histogram(color = "white", alpha = 0.7, fill = "blue") +
ggtitle("Average Memory Usage Distribution by Observation Count") +
geom_hline(yintercept = 338.67, linetype = "dashed", color = "red") +
xlab("Average memory usage (x1000000)") +
ylab("Observation Count")
wide_df %>%
ggplot(aes(x = AvgMemUsage)) +
geom_histogram(color = "white", alpha = 0.7, fill = "blue") +
ggtitle("Average Memory Usage Distribution by Observation Count") +
geom_vline(xintercept = 338.67, linetype = "dashed", color = "red", size = 4) +
xlab("Average memory usage (x1000000)") +
ylab("Observation Count")
wide_df %>%
ggplot(aes(x = AvgMemUsage)) +
geom_histogram(color = "white", alpha = 0.7, fill = "blue") +
ggtitle("Average Memory Usage Distribution by Observation Count") +
geom_vline(xintercept = 338.67, linetype = "dashed", color = "red", size = 2) +
xlab("Average memory usage (x1000000)") +
ylab("Observation Count")
wide_df %>%
ggplot(aes(x = AvgCpuUsage)) +
geom_histogram(color = "white", alpha = 0.7, fill = "red") +
ggtitle("Average CPU Usage Distribution by Server") +
geom_vline(xintercept = 364062326.14, linetype = "dashed", color = "blue", size = 2) +
xlab("Average CPU usage (x1000000)") +
ylab("Observation Count")
wide_df %>%
ggplot(aes(x = AvgCpuUsage)) +
geom_histogram(color = "white", alpha = 0.7, fill = "red") +
ggtitle("Average CPU Usage Distribution by Observation Count") +
geom_vline(xintercept = 364062326.14, linetype = "dashed", color = "blue", size = 2) +
xlab("Average CPU usage (x1000000)") +
ylab("Observation Count")
summary_df %>%
filter(!is.na(NumCpu)) %>%
ggplot(aes(x=NumCpu, y=MedianAvgVMCpu, color = NumCpu)) +
geom_boxplot(outlier.color = "red") +
stat_summary(fun.y=mean, geom="point", shape=23, size = 4) +
ggtitle("Plot of CPU Usage by Number of CPU Cores") +
xlab("Number of CPU Cores") +
ylab("CPU Usage (x1000000)")
summary_df$NumCpu <- as.factor(summary_df$NumCpu)
summary_df %>%
filter(!is.na(NumCpu)) %>%
ggplot(aes(x=NumCpu, y=MedianAvgVMCpu, color = NumCpu)) +
geom_boxplot(outlier.color = "red") +
stat_summary(fun.y=mean, geom="point", shape=23, size = 4) +
ggtitle("Plot of CPU Usage by Number of CPU Cores") +
xlab("Number of CPU Cores") +
ylab("CPU Usage (x1000000)")
View(descriptive_stat_summary)
save.image("D:/Google Drive/Itility - Data Assignment/Itility - Global ENV.RData")
summary_stats_grouped <-
list("Observations by VM" =
list("mean" = (.data$mean[1]),
"sd" = ~ (.data$sd[1]),
"se" = ~ (.data$se[1]),
"IQR" = ~ (.data$IQR[1]),
"Q0.25" = ~(.data$Q0.25[1]),
"Q0.75" = ~(.DATA$Q0.75)[1])
)
summary_table(summary_df, summary_stats_grouped)
summary_stats_grouped <-
list("Observations by VM" =
list("mean" = ~ (.data$mean[1]),
"sd" = ~ (.data$sd[1]),
"se" = ~ (.data$se[1]),
"IQR" = ~ (.data$IQR[1]),
"Q0.25" = ~(.data$Q0.25[1]),
"Q0.75" = ~(.DATA$Q0.75)[1])
)
summary_table(summary_df, summary_stats_grouped)
summary_table(descriptive_stats_summary, summary_stats_grouped)
descriptive_stat_summary <- describe(summary_df[,2:6], ranges = FALSE, quant = c(.25,.75), IQR = TRUE)
library(psych)
descriptive_stat_summary <- describe(summary_df[,2:6], ranges = FALSE, quant = c(.25,.75), IQR = TRUE)
summary_table(descriptive_stat_summary, summary_stats_grouped)
summary_stats_grouped <-
list("Observations by VM" =
list("mean" = ~ (mean[1]),
"sd" = ~ (sd[1]),
"se" = ~ (se[1]),
"IQR" = ~ (IQR[1]),
"Q0.25" = ~(Q0.25[1]),
"Q0.75" = ~(Q0.75)[1])
)
summary_table(descriptive_stat_summary, summary_stats_grouped)
summary_stats_grouped <-
list("Observations by VM" =
list("mean" = ~ (mean[1]),
"sd" = ~ (sd[1]),
"se" = ~ (se[1]),
"IQR" = ~ (IQR[1]),
"Q0.25" = ~ (Q0.25[1]),
"Q0.75" = ~ (Q0.75)[1]),
"Average of Median CPU Usage Grouped by VM" =
list("mean" = ~ (mean[2]),
"sd" = ~ (sd[2]),
"se" = ~ (se[2]),
"IQR" = ~ (IQR[2]),
"Q0.25" = ~ (Q0.25[2]),
"Q0.75" = ~ (Q0.75)[2]),
"Average of Median Memory Usage/Activity Grouped by VM" =
list("mean" = ~ (mean[3]),
"sd" = ~ (sd[3]),
"se" = ~ (se[3]),
"IQR" = ~ (IQR[3]),
"Q0.25" = ~ (Q0.25[3]),
"Q0.75" = ~ (Q0.75)[3])
)
summary_table(descriptive_stat_summary, summary_stats_grouped)
summary_df %>%
ggplot(aes(x = ObservationCount)) +
geom_histogram(binwidth = 1, color = "white", alpha = 0.7, fill = "red") +
geom_vline(xintercept = 51.7, color = "blue", linetype = "longdash") +
ggtitle("Distribution of Record Count by VM") +
xlab("Record Count") +
ylab("VM Count")
ggcorrplot(corr, hc.order = TRUE, outline.color = "white", lab = TRUE)
library(ggcorrplot)
ggcorrplot(corr, hc.order = TRUE, outline.color = "white", lab = TRUE)
summary_df %>%
filter(!is.na(NumCpu)) %>%
ggplot(aes(x=NumCpu, y=MedianAvgVMCpu, color = NumCpu)) +
geom_boxplot(outlier.color = "red") +
stat_summary(fun.y=mean, geom="point", shape=23, size = 4) +
ggtitle("Plot of CPU Usage by Number of CPU Cores") +
xlab("Number of CPU Cores") +
ylab("CPU Usage (x1000000)")
summary_df %>%
filter(!is.na(Cluster)) %>%
ggplot(aes(x=Cluster, y=MedianAvgVMCpu, color = Cluster)) +
geom_boxplot(outlier.color = "red") +
stat_summary(fun.y=mean, geom="point", shape=23, size = 3) +
geom_hline(yintercept = 374449402.2, linetype = "dashed", color = "blue") +
geom_hline(yintercept = 208114707.8, color = "blue") +
geom_hline(yintercept = 508023370.4, color = "blue") +
ggtitle("Plot of CPU Usage by Cluster", subtitle =  "Grouped by VM Average Median") +
xlab("Cluster") +
ylab("CPU Usage (x1000000)")
summary_df %>%
filter(!is.na(NumCpu)) %>%
ggplot(aes(x=NumCpu, y=MedianAvgVMCpu, color = NumCpu)) +
geom_boxplot(outlier.color = "red") +
stat_summary(fun.y=mean, geom="point", shape=23, size = 4) +
geom_hline(yintercept = 374449402.2, linetype = "dashed", color = "blue") +
geom_hline(yintercept = 208114707.8, color = "blue") +
geom_hline(yintercept = 508023370.4, color = "blue") +
ggtitle("Plot of CPU Usage by Number of CPU Cores") +
xlab("Number of CPU Cores") +
ylab("CPU Usage (x1000000)")
summary_df %>%
filter(!is.na(Cluster)) %>%
ggplot(aes(x=Cluster, y=MedianAvgVMCpu, color = Cluster)) +
geom_boxplot(outlier.color = "red") +
stat_summary(fun.y=mean, geom="point", shape=23, size = 3) +
geom_hline(yintercept = 374449402.2, linetype = "dashed", color = "blue") +
geom_hline(yintercept = 208114707.8, color = "blue") +
geom_hline(yintercept = 508023370.4, color = "blue") +
ggtitle("Plot of CPU Usage by Cluster", subtitle =  "Grouped by VM Average Median") +
xlab("Cluster") +
ylab("CPU Usage (x1000000)")
servercount_by_cluster <- summary_df %>%
group_by(cluster) %>%
summarize(ServerCount = n())
servercount_by_cluster <- summary_df %>%
group_by(Cluster) %>%
summarize(ServerCount = n())
View(servercount_by_cluster)
View(underutilized_VMs)
underutilized_VMs_by_cluster <- underutilized_VMs %>%
group_by(Cluster) %>%
summarize(ServerCount = n())
View(underutilized_VMs_by_cluster)
View(few_observation_VMs)
save.image("D:/Google Drive/Itility - Data Assignment/Itility - Global ENV.RData")
